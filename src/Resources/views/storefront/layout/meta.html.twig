{% sw_extends '@Storefront/storefront/layout/meta.html.twig' %}

{% block layout_head_meta_tags %}
    {% block layout_head_meta_tags_endereco_script %}
        {% if page.endereco_config.pluginActive and ( not page.endereco_config.controllerOnlyWhitelist or controllerName in page.endereco_config.controllerWhitelist ) %}
            <script>
                if (undefined === window.EnderecoIntegrator) {
                    window.EnderecoIntegrator = {};
                }
                if (!window.EnderecoIntegrator.onLoad) {
                    window.EnderecoIntegrator.onLoad = [];
                }

                window.EnderecoIntegrator.countryCodeToNameMapping = JSON.parse('{{ page.endereco_config.countryCodeToNameMapping|raw }}');
                window.EnderecoIntegrator.countryMapping = JSON.parse('{{ page.endereco_config.countryMapping|raw }}');
                window.EnderecoIntegrator.countryMappingReverse = JSON.parse('{{ page.endereco_config.countryMappingReverse|raw }}');

                window.EnderecoIntegrator.subdivisionCodeToNameMapping = JSON.parse('{{ page.endereco_config.subdivisionCodeToNameMapping|raw }}');
                window.EnderecoIntegrator.subdivisionMapping = JSON.parse('{{ page.endereco_config.subdivisionMapping|raw }}');
                window.EnderecoIntegrator.subdivisionMappingReverse = JSON.parse('{{ page.endereco_config.subdivisionMappingReverse|raw }}');

                window.EnderecoIntegrator.salutationMapping = JSON.parse('{{ page.endereco_config.salutationMappingReverse|raw }}');
                window.EnderecoIntegrator.salutationMappingReverse = JSON.parse('{{ page.endereco_config.salutationMapping|raw }}');

                function enderecoInitAMS(prefix, config, cb) {
                    if (undefined !== window.EnderecoIntegrator.initAMS) {
                        var EAO = window.EnderecoIntegrator.initAMS(prefix, config);
                        if (cb) {
                            cb(EAO);
                        }
                    } else {
                        window.EnderecoIntegrator.onLoad.push(function () {
                            var EAO = window.EnderecoIntegrator.initAMS(prefix, config);
                            if (cb) {
                                cb(EAO);
                            }
                        });
                    }
                }

                function enderecoInitES(prefix, config) {
                    if (undefined !== window.EnderecoIntegrator.initEmailServices) {
                        window.EnderecoIntegrator.initEmailServices(prefix, config);
                    } else {
                        window.EnderecoIntegrator.onLoad.push(function () {
                            window.EnderecoIntegrator.initEmailServices(prefix, config);
                        });
                    }
                }

                function enderecoInitPS(prefix, config) {
                    if (undefined !== window.EnderecoIntegrator.initPersonServices) {
                        window.EnderecoIntegrator.initPersonServices(prefix, config);
                    } else {
                        window.EnderecoIntegrator.onLoad.push(function () {
                            window.EnderecoIntegrator.initPersonServices(prefix, config);
                        });
                    }
                }

                function enderecoSetConfigValues() {
                    window.EnderecoIntegrator.themeName = '';
                    window.EnderecoIntegrator.defaultCountrySelect = false;
                    window.EnderecoIntegrator.defaultCountry = '{{ page.endereco_config.defaultCountry }}';
                    window.EnderecoIntegrator.config.agentName = '{{ page.endereco_config.enderecoAgentInfo }}';

                    if ('{{ page.endereco_config.pathToIoPhp }}' !== '') {
                        window.EnderecoIntegrator.config.apiUrl = '{{ page.endereco_config.pathToIoPhp }}';
                    } else {
                        window.EnderecoIntegrator.config.apiUrl = '{{ asset('bundles/enderecoshopware6client/io.php') }}';
                    }

                    {% set cssPath = asset('bundles/enderecoshopware6client/endereco.min.css') ~ '?var=' ~ page.endereco_config.enderecoVersion %}

                    window.EnderecoIntegrator.config.apiKey = '{{ page.endereco_config.enderecoApiKey }}';
                    window.EnderecoIntegrator.config.showDebugInfo = false;
                    window.EnderecoIntegrator.config.remoteApiUrl = '{{ page.endereco_config.enderecoRemoteUrl }}';
                    window.EnderecoIntegrator.config.trigger.onblur = !!('{{ page.endereco_config.enderecoTriggerOnBlur }}');
                    window.EnderecoIntegrator.config.trigger.onsubmit = !!('{{ page.endereco_config.enderecoTriggerOnSubmit }}');
                    window.EnderecoIntegrator.config.ux.smartFill = false;
                    window.EnderecoIntegrator.config.ux.checkExisting = false;
                    window.EnderecoIntegrator.config.ux.resumeSubmit = !!('{{ page.endereco_config.enderecoContinueSubmit }}');
                    window.EnderecoIntegrator.config.ux.useStandardCss = ('{{ page.endereco_config.enderecoLoadCss }}' !== 'none');

                    if ('{{ page.endereco_config.enderecoLoadCss }}' === 'link') {
                        window.EnderecoIntegrator.config.ux.cssFilePath = '{{ cssPath }}';
                    } else {
                        window.EnderecoIntegrator.config.ux.cssFilePath = '';
                    }

                    window.EnderecoIntegrator.config.ux.showEmailStatus = !!('{{ page.endereco_config.enderecoShowEmailStatus }}');
                    window.EnderecoIntegrator.config.ux.allowCloseModal = !!('{{ page.endereco_config.enderecoAllowCloseIcon }}');
                    window.EnderecoIntegrator.config.ux.confirmWithCheckbox = !!('{{ page.endereco_config.enderecoConfirmWithCheckbox }}');
                    window.EnderecoIntegrator.config.ux.changeFieldsOrder = true;
                    window.EnderecoIntegrator.config.ux.showPhoneErrors = {{ page.endereco_config.enderecoShowPhoneErrors ? 'true':'false' }};
                    window.EnderecoIntegrator.config.ux.showPhoneFlag = true;
                    window.EnderecoIntegrator.config.ux.correctTranspositionedNames = {{ page.endereco_config.enderecoExchangeNamesAutomatically ? 'true':'false' }};
                    window.EnderecoIntegrator.config.phoneFormat = '{{ page.endereco_config.enderecoPhsUseFormat }}';
                    window.EnderecoIntegrator.config.defaultPhoneType = '{{ page.endereco_config.enderecoPhsDefaultFieldType }}';
                    window.EnderecoIntegrator.config.splitStreet = {{ page.endereco_config.enderecoSplitStreet ? 'true':'false' }};
                    window.EnderecoIntegrator.countryMappingUrl = '';
                    window.EnderecoIntegrator.config.templates.primaryButtonClasses = 'btn btn-primary btn-lg';
                    window.EnderecoIntegrator.config.templates.secondaryButtonClasses = 'btn btn-secondary btn-lg';
                    window.EnderecoIntegrator.config.texts = {
                        popUpHeadline: '{{ "enderecoshopware6client.texts.popUpHeadline"|trans|sw_sanitize|escape('js') }}',
                        popUpSubline: '{{ "enderecoshopware6client.texts.popUpSubline"|trans|sw_sanitize|escape('js') }}',
                        mistakeNoPredictionSubline: '{{ "enderecoshopware6client.texts.mistakeNoPredictionSubline"|trans|sw_sanitize|escape('js') }}',
                        confirmMyAddressCheckbox: '{{ "enderecoshopware6client.texts.confirmMyAddressCheckbox"|trans|sw_sanitize|escape('js') }}',
                        notFoundSubline: '{{ "enderecoshopware6client.texts.notFoundSubline"|trans|sw_sanitize|escape('js') }}',
                        yourInput: '{{ "enderecoshopware6client.texts.yourInput"|trans|sw_sanitize|escape('js') }}',
                        editYourInput: '{{ "enderecoshopware6client.texts.editYourInput"|trans|sw_sanitize|escape('js') }}',
                        ourSuggestions: '{{ "enderecoshopware6client.texts.ourSuggestions"|trans|sw_sanitize|escape('js') }}',
                        useSelected: '{{ "enderecoshopware6client.texts.useSelected"|trans|sw_sanitize|escape('js') }}',
                        confirmAddress: '{{ "enderecoshopware6client.texts.confirmAddress"|trans|sw_sanitize|escape('js') }}',
                        editAddress: '{{ "enderecoshopware6client.texts.editAddress"|trans|sw_sanitize|escape('js') }}',
                        warningText: '{{ "enderecoshopware6client.texts.warningText"|trans|sw_sanitize|escape('js') }}',
                        popupHeadlines: {
                            general_address: '{{ "enderecoshopware6client.texts.general_address"|trans|sw_sanitize|escape('js') }}',
                            billing_address: '{{ "enderecoshopware6client.texts.billing_address"|trans|sw_sanitize|escape('js') }}',
                            shipping_address: '{{ "enderecoshopware6client.texts.shipping_address"|trans|sw_sanitize|escape('js') }}',
                        },
                        statuses: {
                            email_not_correct: '{{ "enderecoshopware6client.statuses.email_not_correct"|trans|sw_sanitize|escape('js') }}',
                            email_cant_receive: '{{ "enderecoshopware6client.statuses.email_cant_receive"|trans|sw_sanitize|escape('js') }}',
                            email_syntax_error: '{{ "enderecoshopware6client.statuses.email_syntax_error"|trans|sw_sanitize|escape('js') }}',
                            email_no_mx: '{{ "enderecoshopware6client.statuses.email_no_mx"|trans|sw_sanitize|escape('js') }}',
                            building_number_is_missing: '{{ "enderecoshopware6client.statuses.building_number_is_missing"|trans|sw_sanitize|escape('js') }}',
                            building_number_not_found: '{{ "enderecoshopware6client.statuses.building_number_not_found"|trans|sw_sanitize|escape('js') }}',
                            street_name_needs_correction: '{{ "enderecoshopware6client.statuses.street_name_needs_correction"|trans|sw_sanitize|escape('js') }}',
                            locality_needs_correction: '{{ "enderecoshopware6client.statuses.locality_needs_correction"|trans|sw_sanitize|escape('js') }}',
                            postal_code_needs_correction: '{{ "enderecoshopware6client.statuses.postal_code_needs_correction"|trans|sw_sanitize|escape('js') }}',
                            country_code_needs_correction: '{{ "enderecoshopware6client.statuses.country_code_needs_correction"|trans|sw_sanitize|escape('js') }}',
                            phone_invalid: '{{ "enderecoshopware6client.statuses.phone_invalid"|trans|sw_sanitize|escape('js') }}',
                            phone_format_needs_correction: '{{ "enderecoshopware6client.statuses.phone_format_needs_correction"|trans|sw_sanitize|escape('js') }}',
                            phone_should_be_fixed: '{{ "enderecoshopware6client.statuses.phone_should_be_fixed"|trans|sw_sanitize|escape('js') }}',
                            phone_should_be_mobile: '{{ "enderecoshopware6client.statuses.phone_should_be_mobile"|trans|sw_sanitize|escape('js') }}',
                        },
                        requiredFormat: {
                            E164: '{{ "enderecoshopware6client.requiredFormat.hintFormatE164"|trans|sw_sanitize|escape('js') }}',
                            INTERNATIONAL: '{{ "enderecoshopware6client.requiredFormat.hintFormatInternational"|trans|sw_sanitize|escape('js') }}',
                            NATIONAL: '{{ "enderecoshopware6client.requiredFormat.hintFormatNational"|trans|sw_sanitize|escape('js') }}',
                        }
                    };
                    window.EnderecoIntegrator.activeServices = {
                        ams: {{ page.endereco_config.enderecoAMSActive ? 'true':'false' }},
                        emailService: {{ page.endereco_config.enderecoEmailCheckActive ? 'true':'false' }},
                        personService: {{ page.endereco_config.enderecoNameCheckActive ? 'true':'false' }},
                        phs: {{ page.endereco_config.enderecoPhsActive ? 'true':'false' }}
                    }

                    // Execute all function that have been called throughout the page.
                    window.EnderecoIntegrator.onLoad.forEach(function (callback) {
                        callback();
                    });

                    window.EnderecoIntegrator.ready = true;

                    (function () {
                        window.EnderecoIntegrator.$formScanner = {
                            loop: null,
                            start: function () {
                                if (window.EnderecoIntegrator.formScannerStarted) {
                                    return;
                                }
                                this.loop = setInterval(function () {
                                    document.querySelectorAll('[name="endereco_data_marker"][data-has-object="no"]').forEach(function (MarkerElement) {
                                        var formElement = MarkerElement.closest('form');
                                        var markerValue = MarkerElement.value;
                                        var formId = '';
                                        if (formElement.getAttribute(`data-endereco-${markerValue}-form-id`)) {
                                            formId = formElement.getAttribute(`data-endereco-${markerValue}-form-id`);
                                        } else {
                                            formId = (Math.floor(Math.random() * 100) * Date.now()).toString(16);
                                            formElement.setAttribute(`data-endereco-${markerValue}-form-id`, formId);
                                        }
                                        var prefix = MarkerElement.getAttribute('data-used-prefix');
                                        if ('ams' === markerValue) {
                                            var countryCodeSelector = MarkerElement.getAttribute('data-country-code-selector');
                                            var postalCodeSelector = MarkerElement.getAttribute('data-postal-code-selector');
                                            var localitySelector = MarkerElement.getAttribute('data-locality-selector');
                                            var streetFullSelector = MarkerElement.getAttribute('data-street-full-selector');
                                            var streetSelector = MarkerElement.getAttribute('data-street-selector');
                                            var houseNumberSelector = MarkerElement.getAttribute('data-house-number-selector');
                                            var subdivisionCodeSelector = MarkerElement.getAttribute('data-subdivision-code-selector');
                                            var addressType = MarkerElement.getAttribute('data-address-type') ?? 'general_address';
                                            var amsStatusSelector = MarkerElement.getAttribute(`data-${markerValue}-status-selector`);
                                            var amsTimestampSelector = MarkerElement.getAttribute(`data-${markerValue}-timestamp-selector`);
                                            var amsPredictionsSelector = MarkerElement.getAttribute(`data-${markerValue}-predictions-selector`);

                                            const objectName = `ams_${prefix}_${formId}`;

                                            var isAjax = 'true' === MarkerElement.getAttribute('data-form-handle-ajax-submit');
                                            var selectorsCollection = {
                                                countryCode: `[data-endereco-${markerValue}-form-id="${formId}"] ${countryCodeSelector}`,
                                                subdivisionCode: `[data-endereco-${markerValue}-form-id="${formId}"] ${subdivisionCodeSelector}`,
                                                postalCode: `[data-endereco-${markerValue}-form-id="${formId}"] ${postalCodeSelector}`,
                                                locality: `[data-endereco-${markerValue}-form-id="${formId}"] ${localitySelector}`,
                                                streetFull: `[data-endereco-${markerValue}-form-id="${formId}"] ${streetFullSelector}`,
                                                streetName: `[data-endereco-${markerValue}-form-id="${formId}"] ${streetSelector}`,
                                                buildingNumber: `[data-endereco-${markerValue}-form-id="${formId}"] ${houseNumberSelector}`,
                                                addressStatus: `[data-endereco-${markerValue}-form-id="${formId}"] ${amsStatusSelector}`,
                                                addressTimestamp: `[data-endereco-${markerValue}-form-id="${formId}"] ${amsTimestampSelector}`,
                                                addressPredictions: `[data-endereco-${markerValue}-form-id="${formId}"] ${amsPredictionsSelector}`,
                                            };
                                            var EAO = window.EnderecoIntegrator.initAMS(
                                                selectorsCollection,
                                                {
                                                    name: objectName,
                                                    addressType: addressType,
                                                    ajaxForm: isAjax
                                                }
                                            );
                                            setBlurListener(EAO, selectorsCollection);
                                        } else if ('phoneServices' === markerValue) {
                                            var countryCodeSelector = MarkerElement.getAttribute('data-country-code-selector');
                                            var phoneSelector = MarkerElement.getAttribute('data-phone-selector');
                                            var numberType = MarkerElement.getAttribute('data-number-type') ?? window.EnderecoIntegrator.config.defaultPhoneType;
                                            window.EnderecoIntegrator.initPhoneServices(
                                                {
                                                    phone: `[data-endereco-${markerValue}-form-id="${formId}"] ${phoneSelector}`,
                                                    countryCode: `[data-endereco-${markerValue}-form-id="${formId}"] ${countryCodeSelector}`
                                                }, {
                                                    name: `phs_${prefix}_${formId}`,
                                                    numberType,
                                                }
                                            );
                                        } else if ('emailServices' === markerValue) {
                                            var emailSelector = MarkerElement.getAttribute('data-email-selector');
                                            enderecoInitES({
                                                'email': `[data-endereco-${markerValue}-form-id="${formId}"] ${emailSelector}`,
                                            }, {
                                                name: `${markerValue}_${prefix}_${formId}`,
                                            });
                                        } else if ('personServices' === markerValue) {
                                            var firstNameSelector = MarkerElement.getAttribute('data-first-name-selector');
                                            var lastNameSelector = MarkerElement.getAttribute('data-last-name-selector');
                                            var salutationSelector = MarkerElement.getAttribute('data-salutation-selector');
                                            var titleSelector = MarkerElement.getAttribute('data-title-selector');
                                            enderecoInitPS({
                                                'firstName': `[data-endereco-${markerValue}-form-id="${formId}"] ${firstNameSelector}`,
                                                'lastName': `[data-endereco-${markerValue}-form-id="${formId}"] ${lastNameSelector}`,
                                                'salutation': `[data-endereco-${markerValue}-form-id="${formId}"] ${salutationSelector}`,
                                                'title': `[data-endereco-${markerValue}-form-id="${formId}"] ${titleSelector}`
                                            }, {
                                                name: `${markerValue}_${prefix}_${formId}`,
                                            });
                                        }
                                        MarkerElement.setAttribute('data-has-object', 'yes');
                                    });
                                }, 1);
                                window.EnderecoIntegrator.formScannerStarted = true;
                            },
                            stop: function () {

                            }
                        }
                        window.EnderecoIntegrator.$formScanner.start();
                    })();
                }

                function shouldBlockFormSubmission(EAO) {
                    return EAO.util.shouldBeChecked() || EAO._awaits > 0;
                }

                function enderecoLoadAMSConfig() {
                    if (window.EnderecoIntegrator.configScannerStarted) {
                        return;
                    }

                    var $interval = setInterval(function () {
                        if (!!window.EnderecoIntegrator.config) {
                            enderecoSetConfigValues();
                            clearInterval($interval);
                        }
                    }, 1);
                    window.EnderecoIntegrator.configScannerStarted = true;
                }

                /**
                 * Sets up a custom blur event listener on specified elements.
                 *
                 * This function iterates over a collection of elements, identified by their selectors,
                 * and attaches a custom event listener for the 'endereco-blur' event. When the 'endereco-blur'
                 * event is triggered on any of these elements, two custom events ('focus' and 'blur') are dispatched
                 * on the target element. This can be useful for triggering custom logic on focus and blur events.
                 *
                 * @param {Object} EAO - The object containing utility functions, including CustomEvent.
                 * @param {Object} elements - An object containing key-value pairs where the key is a unique identifier
                 *                            and the value is a CSS selector for the DOM element.
                 */
                function setBlurListener(EAO, elements) {
                    for (const key in elements) {
                        if (Object.prototype.hasOwnProperty.call(elements, key)) {
                            const selector = elements[key];
                            if (!selector) {
                                continue;
                            }
                            const element = document.querySelector(selector);

                            if (element) {
                                element.addEventListener('endereco-blur', function(e) {
                                    // Dispatch 'focus', 'change' and 'blur' events on the target element
                                    e.target.dispatchEvent(new EAO.util.CustomEvent('focus', { bubbles: true, cancelable: true }));
                                    e.target.dispatchEvent(new EAO.util.CustomEvent('change', { bubbles: true, cancelable: true }));
                                    e.target.dispatchEvent(new EAO.util.CustomEvent('blur', { bubbles: true, cancelable: true }));
                                });
                            }
                        }
                    }
                }
            </script>
        {% endif %}
    {% endblock %}
    {{ parent() }}
{% endblock %}
